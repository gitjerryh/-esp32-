from machine import Pin, PWM, I2C  
import time  
import ssd1306  
import lm75a  
  
# 定义GPIO引脚编号  
motor_dir_pin1 = 22  # 连接到L298N的IN1  
motor_dir_pin2 = 21  # 连接到L298N的IN2  
motor_enable_pin = 2  # 连接到L298N的ENA，使用PWM控制速度  
  
# 初始化GPIO引脚  
motor_dir1 = Pin(motor_dir_pin1, Pin.OUT)  
motor_dir2 = Pin(motor_dir_pin2, Pin.OUT)  
  
# 初始化PWM引脚（用于控制速度）  
pwm = PWM(Pin(motor_enable_pin), freq=1000, duty=0)  
  
# 初始化I2C通信（用于LM75A）  
lm75a_i2c = I2C(1, scl=Pin(12), sda=Pin(13), freq=400000)  
lm75a_address = 0x4f  # LM75A的I2C地址  
lm = lm75a.LM75A(lm75a_i2c, lm75a_address)  
  
# 初始化另一个I2C通信（用于OLED屏幕）  
# 使用不同的SCL和SDA引脚  
oled_i2c = I2C(0, scl=Pin(15), sda=Pin(5), freq=400000)  
oled_width = 128  
oled_height = 64  
oled = ssd1306.SSD1306_I2C(oled_width, oled_height, oled_i2c)  
  
# 设置马达方向  
def set_motor_direction(forward):  
    if forward:  
        motor_dir1.value(1)  
        motor_dir2.value(0)  
    else:  
        motor_dir1.value(0)  
        motor_dir2.value(1)  
  
# 设置马达速度  
def set_motor_speed(speed):  
    pwm.duty(speed)  # 假设speed是一个0到1023之间的值  
  
# 停止马达  
def stop_motor():  
    pwm.duty(0)  
  
# 显示温度  
def display_temperature(temp):  
    oled.fill(0)  # 清除屏幕  
    oled.text("Temp: {:.2f} C".format(temp), 0, 0)  
    oled.show()  
  
try:  
    set_motor_direction(True)  
  
    while True:  
        temp = lm.temp()  # 读取温度  
        display_temperature(temp)  # 显示温度  
  
        if temp > 20.10:  
            set_motor_speed(512)  # 设置一个适中的速度  
        else:  
            stop_motor()  # 停止马达  
  
        time.sleep(1)  # 每秒检查一次温度  
  
except KeyboardInterrupt:  
    stop_motor()  
    pwm.deinit()  
    oled.deinit()  
    print("程序被用户中断，正在退出...")
